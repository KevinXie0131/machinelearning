Scalability / Fault tolerance / High availability / Latency

Shared-Nothing Architectures (horizontal scaling / scaling out)
node / multiple geographic regions

Replication - redundancy
reduce latency / increase availability / increase read throughput
single-leader / multi-leader / leaderless replication
synchronous / asynchronous / semi-synchronous replication - durability / consensus

eventual consistency
read-your-writes / mono‐tonic reads guarantees

replica - leader-based replication - active/passive / master–slave replication
leader (master / primary)
followers (read replicas / slaves / secondaries / hot standbys) - replication log or change stream

Setting Up New Followers / downtime / snapshot / caught up
go down / high availability
Follower failure: Catch-up recovery

Leader failure: Failover
1. Determining that the leader has failed / timeout
2. Choosing a new leader / election / elected controller node / consensus
3. Reconfiguring the system to use the new leader / Request Routing

Discarding writes /  lagged behind / be disclosed to / split brain / resolving conflicts / temporary load spike / network glitch

Implementation of Replication Logs
Statement-based replication / nondeterministic function / autoincrementing column
Write-ahead log (WAL) shipping
Logical (row-based) log replication
Trigger-based replication / triggers & stored procedures

Problems with Replication Lag / eventual consistency

Reading Your Own Writes / stale replica / read-after-write consistency / read-your-writes consistency / logical timestamp
Monotonic Reads / moving backward in time / little/greater lag / fresh/stale replica / anomaly
Consistent Prefix Reads / replication lag anomalies concerns violation of causality / a sequence of writes happens in a certain order / written to the same partition

Solutions for Replication Lag / transactions abandoned

Multi-Leader Replication (master–master / active/active replication)) / across multiple datacenters /  single-leader based replication
Performance / Tolerance of datacenter outages / Tolerance of network problems
conflict resolution / auto-incrementing keys / triggers / integrity constraints
Clients with offline operation /  synced with  Collaborative editing / Real-time collaborative editing
Handling Write Conflicts / committed changes / released the lock / Conflict avoidance
Converging toward a consistent state / unique ID (timestamp, long random number, UUID, hash) / last write wins (LWW)
Custom conflict resolution logic / On write / On read
replication topology / all-to-all / circular / star




Partitioning - sharding
